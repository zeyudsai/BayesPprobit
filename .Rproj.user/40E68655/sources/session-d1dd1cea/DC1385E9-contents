dgnorm_manual <- function(x, mu = 0, p = 2, scale = NULL, log = FALSE) {
  if (is.null(scale)) {
    scale <- p_scale(p)
  }
  beta <- p
  alpha <- scale
  coef <- beta / (2 * alpha * gamma(1 / beta))
  exponent <- - (abs(x - mu) / alpha) ^ beta
  if (log) {
    return(log(coef) + exponent)
  } else {
    return(coef * exp(exponent))
  }
}

pgnorm_manual <- function(q, mu = 0, p = 2, scale = NULL, lower.tail = TRUE) {
  if (is.null(scale)) {
    scale <- p_scale(p)
  }
  sapply(q, function(x) {
    integrate(dgnorm_manual, lower = ifelse(lower.tail, -Inf, x), upper = ifelse(lower.tail, x, Inf),
              mu = mu, p = p, scale = scale)$value
  })
}

rgnorm_manual <- function(n, mu = 0, p = 2, scale = NULL) {
  if (is.null(scale)) {
    scale <- p_scale(p)
  }
  u <- runif(n)
  qgnorm_manual(u, mu = mu, p = p, scale = scale)
}

qgnorm_manual <- function(p_vals, mu = 0, p = 2, scale = NULL) {
  if (is.null(scale)) {
    scale <- p_scale(p)
  }
  sapply(p_vals, function(p_val) {
    uniroot(function(x) {
      integrate(dgnorm_manual, lower = -Inf, upper = x, mu = mu, p = p, scale = scale)$value - p_val
    }, interval = c(-10 * scale + mu, 10 * scale + mu))$root
  })
}
# 标准正态分布的密度函数
dnorm_standard <- function(x) {
  dnorm(x, mean = 0, sd = 1)
}

# 比较 dgnorm_manual 和 dnorm
x_vals <- seq(-4, 4, length.out = 100)
dens_gnorm_p2 <- dgnorm_manual(x_vals, mu = 0, p = 2, scale = 1 / sqrt(2))
dens_norm <- dnorm_standard(x_vals)

# 绘图比较
plot(x_vals, dens_gnorm_p2, type = 'l', col = 'red', lwd = 2, ylab = 'Density', main = 'p=2 Comparison')
lines(x_vals, dens_norm, col = 'blue', lwd = 2)
legend('topright', legend = c('dgnorm_manual p=2', 'Standard Normal'), col = c('red', 'blue'), lwd = 2)




# 定义尺度参数函数
p_scale <- function(p){
  if (!is.numeric(p) || length(p) != 1 || p <= 0) {
    stop("`p` must be a single positive numeric value.")
  }
  scale <- p^(1 / p)
  return(scale)
}

# 实现密度函数
d_pgnorm <- function(x, mu = 0, p = 2, log = FALSE) {
  alpha <- p_scale(p)
  coef <- p^(1 - 1 / p) / (2 * gamma(1 / p))
  exponent <- - (abs(x - mu)^p) / p
  if (log) {
    return(log(coef) + exponent)
  } else {
    return(coef * exp(exponent))
  }
}

# 比较函数
compare_distributions <- function(p_values, x_vals) {
  for (p in p_values) {
    # 手动实现的密度
    dens_manual <- d_pgnorm(x_vals, mu = 0, p = p)
    
    # 特殊情况处理
    if (p == 2) {
      dens_ref <- dnorm(x_vals, mean = 0, sd = 1)
      ref_label <- 'Standard Normal'
    } else if (p == 1) {
      dens_ref <- 0.5 * exp(-abs(x_vals))
      ref_label <- 'Laplace Distribution'
    } else {
      dens_ref <- NULL
      ref_label <- NULL
    }
    
    # 绘图
    plot(x_vals, dens_manual, type = 'l', col = 'red', lwd = 2,
         ylab = 'Density', main = paste('Density Comparison for p =', p))
    if (!is.null(dens_ref)) {
      lines(x_vals, dens_ref, col = 'blue', lwd = 2)
      legend('topright', legend = c('d_pgnorm', ref_label), col = c('red', 'blue'), lwd = 2)
    } else {
      legend('topright', legend = c('d_pgnorm'), col = c('red'), lwd = 2)
    }
  }
}

# 调用比较函数
x_vals <- seq(-5, 5, length.out = 200)
p_values <- c(1, 2)
p_values
x_vals
compare_distributions(p_values, x_vals)
d_pgnorm(x_vals)
dnorm(x_vals)
